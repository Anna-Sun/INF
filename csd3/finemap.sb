#!/bin/bash

#SBATCH --account=PETERS-SL3-CPU
#SBATCH --ntasks=1
#SBATCH --job-name=_finemap
#SBATCH --time=12:00:00
#SBATCH --partition=skylake
#SBATCH --array=1-189%15
#SBATCH --mem=128800
#SBATCH --output=/rds/user/jhz22/hpc-work/work/_finemap_%A_%a.out
#SBATCH --error=/rds/user/jhz22/hpc-work/work/_finemap_%A_%a.err
#SBATCH --export ALL

export job=${SLURM_ARRAY_TASK_ID}
export TMPDIR=/rds/user/jhz22/hpc-work/work
export INF=/rds/project/jmmh2/rds-jmmh2-projects/olink_proteomics/scallop/INF
export list=${INF}/work/INF1_nold.sentinels
export p=$(awk -v job=${job} 'NR==job+1{print $1}' ${list})
export chr=$(awk -v job=${job} 'NR==job+1{print $2}' ${list})
export pos=$(awk -v job=${job} 'NR==job+1{print $3}' ${list})
export r=$(awk -v job=${job} 'NR==job+1{print $4}' ${list})
export pr=${p}-${r}
export sumstats=${INF}/METAL/${p}-1.tbl.gz
export flanking=1e6
export start=$(awk -vpos=${pos} -vflanking=${flanking} 'BEGIN{start=pos-flanking;if(start<0) start=0;print start}')
export end=$(awk -vpos=${pos} -vflanking=${flanking} 'BEGIN{print pos+flanking}')
export bfile=${INF}/work/INTERVAL
export sample=${INF}/INTERVAL/o5000-inf1-outlier_in-r2.sample
export snpid_rsid=${INF}/work/INTERVAL.rsid
export study=INTERVAL
export N=4994

cd work
# z0
(
  zcat ${sumstats} | head -1 | awk '{print $3,$1,$2,$5,$4,"MAF",$10,$11}'
  zcat ${sumstats} | \
  awk 'NR > 1' | \
  sort -k3,3 | \
  awk -vchr=${chr} -vstart=${start} -vend=${end} '
  {
    if ($1==chr && $2 >= start && $2 < end) {
    if ($6 < 0.5) maf = $6; else maf = 1-$6
    if (maf > 0 && maf <= 0.5 && $10 != "NA" && $11 != "NA") print $3, $1, $2, toupper($5), toupper($4), maf, $10, $11
  }
  } ' | \
  join ${pr} -
) > ${pr}.z0

# bgen and bgi
awk 'NR > 1{print $1} ' ${pr}.z0 > ${pr}.incl
qctool -g ${bfile}.bgen -og ${pr}.bgen -ofiletype bgen -incl-rsids ${pr}.incl
bgenix -g ${pr}.bgen -index -clobber
ln -sf ${pr}.bgen.bgi ${pr}.bgi

# z
(
  join <(awk 'NR > 1' ${pr}.z0 | cut -d' ' -f1,4,5  | sort -k1,1) \
       <(bgenix -g ${pr}.bgen -list 2>&1 | awk 'NR>9 && NF==7'| cut -f2,6,7 | sort -k1,1) | \
  awk '{print $1, ($2!=$4)}'
) > ${pr}.flip
(
  awk 'BEGIN {print "rsid", "chromosome", "position", "allele1", "allele2", "maf", "beta", "se", "flip"}'
  join <(awk 'NR > 1' ${pr}.z0) ${pr}.flip | awk '{if($9==1) {t=$4;$4=$5;$5=t};$7=-$7; print}'
) > ${pr}.z

# LD-based finemapping
rm -rf ${pr}.cred* ${pr}.log_sss ${pr}.snp ${pr}.config
function ld_finemap()
## ldstore_v1.1 and finemap_v1.3.1/finemap_v1.4
{
  ldstore_v1.1 --bcor ${pr}-1 --bgen ${pr}.bgen --ld-n-samples-avail-prop 0.95 --ld-thold 0.01 --n-threads 1
  ldstore_v1.1 --bcor ${pr}-1 --merge 1
  ldstore_v1.1 --bcor ${pr}-1 --matrix ${pr}.ld
  rm ${pr}-1_*
  mv ${pr}-1 ${pr}.bcor
  (
    echo "z;ld;snp;config;cred;log;n_samples"
    echo "${pr}.z;${pr}.ld;${pr}.snp;${pr}.config;${pr}.cred;${pr}.log;$N"
  ) > ${pr}.master
  finemap_v1.3.1 --sss --in-files ${pr}.master --log --n-causal-snps 10 \
                 --corr-config 0.95 --corr-group 0.9999 --group-snps
}

## ldstore_v2.0b and finemap_v1.4
(
  echo "z;bgen;bgi;bcor;snp;config;cred;log;n_samples"
  echo "${pr}.z;${pr}.bgen;${pr}.bgi;${pr}.bcor;${pr}.snp;${pr}.config;${pr}.cred;${pr}.log;$N"
) > ${pr}.master2
ldstore_v2.0b --in-files ${pr}.master2 --write-bcor
finemap_v1.4 --sss --in-files ${pr}.master2 --log --n-causal-snps 10 \
             --corr-config 0.95 --corr-group 0.9999 --group-snps

# xlsx
export snpid_rsid=${pr}
R -q --no-save < ${INF}/csd3/finemap.R > ${pr}-finemap.log

# zld
ldstore_v2.0b --in-files ${pr}.master2 --bcor-to-text
gzip -f ${pr}.ld
R --no-save -q < ${INF}/csd3/zld.R > ${pr}-zld.log

cd -
