#!/bin/bash

#SBATCH --account=PETERS-SL3-CPU
#SBATCH --ntasks=1
#SBATCH --job-name=_finemap
#SBATCH --time=12:00:00
#SBATCH --partition=skylake
#SBATCH --array=1-146%15
#SBATCH --mem=128800
#SBATCH --output=work/_finemap_%A_%a.out
#SBATCH --error=work/_finemap_%A_%a.err
#SBATCH --export ALL

export TMPDIR=/rds/user/jhz22/hpc-work/work
export INF=/rds/project/jmmh2/rds-jmmh2-projects/olink_proteomics/scallop/INF
export job=${SLURM_ARRAY_TASK_ID}
export bindir=/rds-d4/user/jhz22/hpc-work/bin
export dir=${INF}/work
export list=${dir}/INF1_nold.sentinels
export p=$(awk -v job=${job} 'NR==job+1{print $1}' ${list})
export chr=$(awk -v job=${job} 'NR==job+1{print $2}' ${list})
export pos=$(awk -v job=${job} 'NR==job+1{print $3}' ${list})
export r=$(awk -v job=${job} 'NR==job+1{print $4}' ${list})
export pr=${p}-${r}
export sumstats=${INF}/METAL/${p}-1.tbl.gz
export flanking=1e6
export start=$(awk -vpos=${pos} -vflanking=${flanking} 'BEGIN{start=pos-flanking;if(start<0) start=0;print start}')
export end=$(awk -vpos=${pos} -vflanking=${flanking} 'BEGIN{print pos+flanking}')
export bfile=${INF}/INTERVAL/INTERVAL
export sample=o5000-inf1-outlier_in-r2.sample
export snpid_rsid=${INF}/work/INTERVAL.rsid
export study=INTERVAL
export N=15150

  awk -vlower=$start -vupper=$end'$2>=lower && $2 < upper{print $2}' ${bfile.bim} > ${dir}/${pr}
  sort -k1,1 ${snpid_rsid} | join -a2 - ${pr} > ${pr}.rsid
  R --no-save -q <<\ \ END
      f <- Sys.getenv("pr")
      snpid_rsid <- read.table(paste0(f,".rsid"), as.is=TRUE, col.names=c("rsid","name"), fill=TRUE)
      nmiss <- with(snpid_rsid,name=="")
      snpid_rsid <- within(snpid_rsid, {name[nmiss] <- make.names(rsid[nmiss])})
      save(snpid_rsid, file=paste0(f,".rda"))
  END
# z0
  (
    zcat ${sumstats} | \
    awk 'NR > 1' | \
    sort -k1,1 | \
    awk -vchr=${chr} -vstart=${start} -vend=${end} '
    {
      if ($2==chr && $3 >= start && $3 < end) {
      if ($8 < 0.5) maf = $8; else maf = 1-$8
      if (maf > 0 && maf <= 0.5 && $9 != "NA" && $10 != "NA") print $1, $2, $3, $7, $6, maf, $9, $10
    }
    } ' | \
    join ${dir}/${pr} -
  ) > ${pr}.z0
  awk '{print $1} ' ${pr}.z0 > ${pr}.incl
# bgen
  qctool -g ${bfile}.bed -filetype binary_ped -og ${pr}.bgen -ofiletype bgen -incl-rsids ${pr}.incl
# bgi
  bgenix -g ${pr}.bgen -index -clobber
  ln -sf ${pr}.bgen.bgi ${pr}.bgi
# z
  qctool -g ${pr}.bgen -snp-stats -osnp - > ${pr}.snp-stats
  (
    join <(cut -d' ' -f1,4,5 ${pr}.z0 | sort -k1,1) <(awk '!/\#/' ${pr}.snp-stats | cut -f1,5,6 | awk 'NR>1' | sort -k1,1) | \
    awk '{print $1, ($2!=$4)}'
  ) > ${pr}.flip
  (
    awk 'BEGIN {print "rsid", "chromosome", "position", "allele1", "allele2", "maf", "beta", "se", "flip"}'
    join ${pr}.z0 ${pr}.flip | awk '{if($9==1) {t=$4;$4=$5;$5=t};$7=-$7; print}'
  ) > ${pr}.z
# master
  (
    echo "z;bgen;bgi;dose;snp;config;cred;log;n_samples"
    echo "${pr}.z;${pr}.bgen;${pr}.bgi;${pr}.dose;${pr}.snp;${pr}.config;${pr}.cred;${pr}.log;$N"
  ) > ${pr}.master
# finemap
  rm -rf ${pr}.cred ${pr}.dose ${pr}.snp ${pr}.config
  ${bindir}/finemap --sss --in-files ${pr}.master
# xlsx
  R -q --no-save <<\ \ END
    options(digits=3, scipen=20, width=500)
    pr <- Sys.getenv("pr")
    cat(pr, "\n")
    snp <- read.table(paste0(pr, ".snp"), as.is=TRUE, header=TRUE)
    config <- read.table(paste0(pr,".config"),as.is=TRUE,header=TRUE)
    cred <- read.table(paste0(pr,".cred"),as.is=TRUE,header=TRUE)
    load(paste0(pr,".rda"))
    library(openxlsx)
    xlsx <- paste0(pr, "-finemap.xlsx")
    unlink(xlsx, recursive = FALSE, force = TRUE)
    wb <- createWorkbook(xlsx)
    f <- make.names(pr)
    addWorksheet(wb, "snpid_rsid")
    writeDataTable(wb, "snpid_rsid", snpid_rsid)
    addWorksheet(wb, paste0(f, ".snp"))
    writeDataTable(wb, paste0(f, ".snp"), snp)
    addWorksheet(wb, paste0(f, ".cfg"))
    writeDataTable(wb, paste0(f, ".cfg"), config)
    addWorksheet(wb, paste0(f, ".cs"))
    writeDataTable(wb, paste0(f, ".cs"), cred)
    saveWorkbook(wb, file=xlsx, overwrite=TRUE)
  END
